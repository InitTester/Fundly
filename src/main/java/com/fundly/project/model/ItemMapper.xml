<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--현재 작성중인 Mapper와 연결시켜줄 DAO객체를 명시한다-->
<mapper namespace="com.fundly.project.model.ItemMapper">


    <!--1. 해당(특정) 프로젝트에 등록된 아이템 갯수 세기-->
    <select id="count" resultType="int">
        SELECT count(*)
        FROM pj_item_tmp
        WHERE pj_id = #{pj_id}
    </select>

    <!--2. 해당(특정) 프로젝트의 모든 아이템 출력 -->
    <select id="selectAllFromPj" resultType="ItemDto">
        SELECT *
        FROM pj_item_tmp
        WHERE pj_id = #{pj_id}
    </select>

    <!--3. (모든 프로젝트의) 모든 아이템 출력 -->
    <select id="selectAll" resultType="ItemDto">
        SELECT *
        FROM pj_item_tmp
    </select>

    <!--4. 특정 아이템 출력(아이템 아이디로 식별) -->
    <select id="select" resultType="ItemDto">
        SELECT *
        FROM pj_item_tmp
        WHERE item_id = #{item_id}
    </select>

    <!--5. 아이템 하나 등록 -->
    <insert id="insert" parameterType="ItemDto">
        <selectKey keyProperty="item_id" resultType="String" order="BEFORE">
            SELECT concat((ifnull(Max(seq),0)+1),#{pj_id}) from pj_item_tmp
        </selectKey>
        INSERT into pj_item_tmp
        (item_id, pj_id, item_name, item_option_type, item_option, dba_reg_id )
        VALUES
        (#{item_id}, #{pj_id},#{item_name},#{item_option_type}, #{item_option}, #{dba_reg_id})
    </insert>

    <!--6. 해당 아이템 삭제-->
    <delete id="delete">
        DELETE FROM pj_item_tmp
        WHERE item_id = #{item_id} and dba_reg_id = #{dba_reg_id}
    </delete>

    <!--7. 아이템 모두 삭제-->
    <delete id="deleteAll">
        DELETE FROM pj_item_tmp
    </delete>



</mapper>